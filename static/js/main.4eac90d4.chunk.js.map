{"version":3,"sources":["components/UI/Comment/Comment.module.scss","components/Message/Message.module.scss","components/Chat/Chat.module.scss","components/ChatItem/ChatItem.tsx","components/UI/List/List.tsx","components/UI/Comment/Comment.tsx","components/Message/Message.tsx","components/MessageList/MessageList.tsx","components/Sidebar/Sidebar.tsx","components/Chat/chats.testdata.ts","components/Chat/Chat.tsx","App.tsx","serviceWorker.ts","index.tsx","components/MessageList/MessageList.module.scss","components/ChatItem/ChatItem.module.scss","components/Sidebar/Sidebar.module.scss"],"names":["module","exports","ETypeItem","List","props","children","divProps","Comment","avatar","label","content","timestamp","avatarDOM","className","styles","left","src","alt","contentDOM","right","top","comment","Message","ava","username","message","timestampFormated","toLocaleTimeString","hour","minute","MessageList","chatMessages","isActive","messagelist","map","messageProps","key","getTime","blank","ChatItem","chatType","shortmessage","chatId","date1","date2","Date","getFullYear","getMonth","getDate","dateCompare","toLocaleDateString","item","Sidebar","chatsData","handleClickCreator","activeChat","sidebar","chatProps","active","onClick","Chat","state","undefined","newChatMessages","faker","random","number","name","firstName","hacker","phrase","date","past","setState","this","chat","sort","chat1","chat2","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4eac90d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__lbK_I\",\"left\":\"Comment_left__2xve6\",\"avatar\":\"Comment_avatar__3ilhB\",\"right\":\"Comment_right__1oP5A\",\"top\":\"Comment_top__2UFsY\",\"label\":\"Comment_label__2uyWa\",\"timestamp\":\"Comment_timestamp__3l9lE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Message_content__17Doq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__i58WX\"};","import React, { FC } from 'react';\nimport { Comment } from 'components/UI/Comment';\n\nimport styles from './ChatItem.module.scss';\n\nconst dateCompare = (date1: Date, date2: Date = new Date()): boolean => {\n  return (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n};\n\nenum ETypeItem {\n  personal = 0,\n  group,\n  channel,\n}\n\nexport interface IChatItemProps extends React.HTMLProps<HTMLDivElement> {\n  chatId: string;\n  chatType: ETypeItem;\n  ava: string;\n  label: string;\n  username?: string;\n  shortmessage: string;\n  timestamp: Date;\n}\n\nexport const ChatItem: FC<IChatItemProps> = (props) => {\n  const {\n    chatType,\n    ava,\n    label,\n    username,\n    shortmessage,\n    timestamp,\n    chatId,\n    className,\n    ...divProps\n  } = props;\n  const contentDOM = (\n    <p className={styles.content}>\n      {/* не отображаем имя для личных чатов */}\n      {chatType !== 0 ? `${username}: ` : null}\n      {shortmessage}\n    </p>\n  );\n  const timestampFormated = timestamp\n    ? dateCompare(timestamp)\n      ? timestamp.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n        })\n      : timestamp.toLocaleDateString()\n    : null;\n  return (\n    <div className={`${styles.item} ${className}`} {...divProps}>\n      <Comment\n        avatar={ava}\n        label={label}\n        timestamp={timestampFormated}\n        content={contentDOM}\n      />\n    </div>\n  );\n};\n","import React, { FC, HTMLProps } from 'react';\n\ninterface IList extends HTMLProps<HTMLDivElement> {}\n\nexport const List: FC<IList> = (props) => {\n  const { children, ...divProps } = props;\n  return <div {...divProps}>{children}</div>;\n};\n","import React, { FC } from 'react';\n\nimport styles from './Comment.module.scss';\n\nexport interface ICommentProps {\n  avatar?: React.ReactNode;\n  label?: React.ReactNode;\n  content: React.ReactNode;\n  timestamp?: React.ReactNode;\n}\n\nexport const Comment: FC<ICommentProps> = ({\n  avatar,\n  label,\n  content,\n  timestamp,\n}) => {\n  const avatarDOM = (\n    <div className={styles.left}>\n      {typeof avatar === 'string' ? (\n        <img className={styles.avatar} src={avatar} alt=\"\" />\n      ) : (\n        avatar\n      )}\n    </div>\n  );\n\n  const contentDOM = (\n    <div className={styles.right}>\n      <p className={styles.top}>\n        {label && <span className={styles.label}>{label}</span>}\n        {timestamp && <span className={styles.timestamp}>{timestamp}</span>}\n      </p>\n      {content}\n    </div>\n  );\n\n  return (\n    <div className={styles.comment}>\n      {avatarDOM}\n      {contentDOM}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Comment } from 'components/UI/Comment';\n\nimport styles from './Message.module.scss';\n\nexport interface IMessageProps {\n  ava: string;\n  username: string;\n  message: string;\n  timestamp: Date | undefined;\n}\n\nexport const Message: FC<IMessageProps> = (props) => {\n  const { ava, username, message, timestamp } = props;\n  const contentDOM = <p className={styles.content}>{message}</p>;\n  const timestampFormated = timestamp\n    ? timestamp.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n      })\n    : null;\n  return (\n    <Comment\n      avatar={ava}\n      label={username}\n      timestamp={timestampFormated}\n      content={contentDOM}\n    />\n  );\n};\n","import React, { FC } from 'react';\n\nimport { List } from '../UI/List';\n\nimport { Message, IMessageProps } from 'components/Message';\n\nimport styles from './MessageList.module.scss';\n\nexport type chatMessagesType = IMessageProps;\n\nexport interface IMessageListProps {\n  isActive: boolean;\n  chatMessages: chatMessagesType[];\n}\n\nexport const MessageList: FC<IMessageListProps> = (props) => {\n  const { chatMessages, isActive } = props;\n  return isActive ? (\n    <List className={styles.messagelist}>\n      {chatMessages.map((messageProps) => (\n        <Message key={messageProps.timestamp?.getTime()} {...messageProps} />\n      ))}\n    </List>\n  ) : (\n    <div className={`${styles.messagelist} ${styles.blank}`}>\n      Выберите чат...\n    </div>\n  );\n};\n","import React, { FC, MouseEvent } from 'react';\n\nimport { List as ChatList } from '../UI/List';\nimport { ChatItem, IChatItemProps } from '../ChatItem';\n\nimport styles from './Sidebar.module.scss';\n\nexport type chatsDataType = IChatItemProps;\n\nexport interface ISidebarProps {\n  handleClickCreator: (\n    chatId: string,\n  ) => (e: MouseEvent<HTMLDivElement>) => void;\n  chatsData: chatsDataType[];\n  activeChat: string | undefined;\n}\n\nexport const Sidebar: FC<ISidebarProps> = (props) => {\n  const { chatsData, handleClickCreator, activeChat } = props;\n  return (\n    <div className={styles.sidebar}>\n      <ChatList>\n        {chatsData.map((chatProps) => {\n          const {\n            chatId,\n            chatType,\n            ava,\n            label,\n            username,\n            shortmessage,\n            timestamp,\n          } = chatProps;\n          return (\n            <ChatItem\n              key={chatId}\n              className={activeChat === chatId ? styles.active : ''}\n              onClick={handleClickCreator(chatId)}\n              chatId={chatId}\n              chatType={chatType}\n              ava={ava}\n              label={label}\n              username={username}\n              shortmessage={shortmessage}\n              timestamp={timestamp}\n            />\n          );\n        })}\n      </ChatList>\n    </div>\n  );\n};\n","let chatsData = [\n  {\n    chatId: '0',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg',\n    label: 'Антон',\n    username: 'Антон',\n    shortmessage: 'We need to bypass the mobile HDD port!',\n    timestamp: new Date('2020-05-04T16:57:31.338Z'),\n  },\n  {\n    chatId: '1',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/rahmeen/128.jpg',\n    label: 'Александр',\n    username: 'Александр',\n    shortmessage: 'We need to program the mobile IB sensor!',\n    timestamp: new Date('2020-03-22T16:57:31.338Z'),\n  },\n  {\n    chatId: '2',\n    chatType: 2,\n    ava: 'https://picsum.photos/id/282/48',\n    label: 'value-added Configurable synthesize',\n    username: 'Эдуард',\n    shortmessage:\n      'Use the mobile IB circuit, then you can synthesize the auxiliary driver!',\n    timestamp: new Date('2020-03-22T16:57:31.338Z'),\n  },\n  {\n    chatId: '3',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg',\n    label: 'Никита',\n    username: 'Никита',\n    shortmessage:\n      \"I'll bypass the virtual PCI bandwidth, that should panel the CSS program!\",\n    timestamp: new Date('2020-03-22T16:57:31.338Z'),\n  },\n  {\n    chatId: '4',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg',\n    label: 'Аркадий',\n    username: 'Аркадий',\n    shortmessage:\n      'Use the neural RAM driver, then you can bypass the online port!',\n    timestamp: new Date('2020-03-22T16:57:31.339Z'),\n  },\n  {\n    chatId: '5',\n    chatType: 1,\n    ava: 'https://picsum.photos/id/558/48',\n    label: 'aggregate Фантастический Бетонный Стол',\n    username: 'Андрей',\n    shortmessage:\n      'Try to input the ADP hard drive, maybe it will override the multi-byte monitor!',\n    timestamp: new Date('2020-03-22T16:57:31.339Z'),\n  },\n  {\n    chatId: '6',\n    chatType: 2,\n    ava: 'https://picsum.photos/id/794/48',\n    label: 'темно-фиолетовый Автомобиль Solutions',\n    username: 'Арина',\n    shortmessage:\n      'Use the multi-byte GB circuit, then you can index the 1080p interface!',\n    timestamp: new Date('2020-03-22T16:57:31.339Z'),\n  },\n  {\n    chatId: '7',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/nessoila/128.jpg',\n    label: 'Лариса',\n    username: 'Лариса',\n    shortmessage:\n      'Use the wireless JSON protocol, then you can copy the cross-platform capacitor!',\n    timestamp: new Date('2020-03-22T16:57:31.339Z'),\n  },\n  {\n    chatId: '8',\n    chatType: 1,\n    ava: 'https://picsum.photos/id/394/48',\n    label: 'Borders dynamic',\n    username: 'Андрей',\n    shortmessage:\n      'The JBOD monitor is down, program the bluetooth circuit so we can bypass the ADP feed!',\n    timestamp: new Date('2020-03-22T16:57:31.340Z'),\n  },\n  {\n    chatId: '9',\n    chatType: 1,\n    ava: 'https://picsum.photos/id/916/48',\n    label: 'transmitting',\n    username: 'Антон',\n    shortmessage:\n      'Try to transmit the HDD monitor, maybe it will reboot the redundant feed!',\n    timestamp: new Date('2020-03-22T16:57:31.340Z'),\n  },\n  {\n    chatId: '10',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg',\n    label: 'Анжелика',\n    username: 'Анжелика',\n    shortmessage:\n      \"I'll navigate the mobile CSS sensor, that should firewall the PCI bus!\",\n    timestamp: new Date('2020-03-22T16:57:31.340Z'),\n  },\n  {\n    chatId: '11',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/a_harris88/128.jpg',\n    label: 'София',\n    username: 'София',\n    shortmessage: 'We need to hack the mobile XML panel!',\n    timestamp: new Date('2020-03-22T16:57:31.340Z'),\n  },\n  {\n    chatId: '12',\n    chatType: 0,\n    ava: 'https://picsum.photos/id/31/48',\n    label: 'calculate Forward',\n    username: 'Валентина',\n    shortmessage:\n      \"You can't hack the driver without indexing the open-source USB system!\",\n    timestamp: new Date('2020-03-22T16:57:31.340Z'),\n  },\n  {\n    chatId: '13',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhiardana/128.jpg',\n    label: 'Валентин',\n    username: 'Валентин',\n    shortmessage:\n      'Try to transmit the PNG card, maybe it will copy the online array!',\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '14',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/panchajanyag/128.jpg',\n    label: 'Алевтина',\n    username: 'Алевтина',\n    shortmessage:\n      \"parsing the program won't do anything, we need to input the online HTTP matrix!\",\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '15',\n    chatType: 0,\n    ava: 'https://picsum.photos/id/379/48',\n    label: 'Дом monitor',\n    username: 'Анжелика',\n    shortmessage:\n      'Use the multi-byte HDD hard drive, then you can reboot the wireless system!',\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '16',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/puzik/128.jpg',\n    label: 'Дмитрий',\n    username: 'Дмитрий',\n    shortmessage:\n      \"connecting the pixel won't do anything, we need to back up the auxiliary AGP microchip!\",\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '17',\n    chatType: 0,\n    ava: 'https://s3.amazonaws.com/uifaces/faces/twitter/her_ruu/128.jpg',\n    label: 'Лука',\n    username: 'Лука',\n    shortmessage:\n      \"You can't program the array without connecting the online FTP firewall!\",\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '18',\n    chatType: 1,\n    ava: 'https://picsum.photos/id/53/48',\n    label: 'neutral',\n    username: 'Никита',\n    shortmessage:\n      'Try to connect the XSS microchip, maybe it will parse the open-source panel!',\n    timestamp: new Date('2020-03-22T16:57:31.341Z'),\n  },\n  {\n    chatId: '19',\n    chatType: 2,\n    ava: 'https://picsum.photos/id/283/48',\n    label: 'Devolved Saint Helena Pound European Unit of Account 17(E.U.A.-17)',\n    username: 'Лука',\n    shortmessage:\n      \"You can't compress the hard drive without transmitting the bluetooth JSON interface!\",\n    timestamp: new Date('2020-03-22T16:57:31.342Z'),\n  },\n  {\n    chatId: '20',\n    chatType: 2,\n    ava: 'https://picsum.photos/id/484/48',\n    label: 'synthesize',\n    username: 'Константин',\n    shortmessage:\n      \"overriding the application won't do anything, we need to transmit the virtual HTTP panel!\",\n    timestamp: new Date('2020-03-22T16:57:31.342Z'),\n  },\n];\n\nexport { chatsData };\n","import React from 'react';\nimport faker from 'faker/locale/ru';\n\nimport { MessageList, chatMessagesType } from 'components/MessageList';\nimport { Sidebar, chatsDataType } from 'components/Sidebar';\n\nimport { chatsData } from './chats.testdata';\n\nimport styles from './Chat.module.scss';\n\ninterface IChatState {\n  chatId: string | undefined;\n  chatMessages: chatMessagesType[];\n}\n\nexport class Chat extends React.Component {\n  readonly state: IChatState = {\n    chatId: undefined,\n    chatMessages: [],\n  };\n  handleClickCreator = (chatId: string) => {\n    return () => {\n      const newChatMessages = [\n        ...this.state.chatMessages,\n        {\n          ava: `https://picsum.photos/id/${faker.random.number(1000)}/48`,\n          username: faker.name.firstName(),\n          message: faker.hacker.phrase(),\n          timestamp: faker.date.past(),\n        },\n      ];\n      this.setState({ chatId: chatId, chatMessages: newChatMessages });\n    };\n  };\n\n  render() {\n    const { chatId } = this.state;\n    return (\n      <div className={styles.chat}>\n        <Sidebar\n          activeChat={chatId}\n          chatsData={chatsData.sort(\n            (chat1: chatsDataType, chat2: chatsDataType): number =>\n              chat2.timestamp.getTime() - chat1.timestamp.getTime(),\n          )}\n          handleClickCreator={this.handleClickCreator}\n        />\n        <MessageList\n          chatMessages={this.state.chatMessages}\n          isActive={chatId ? true : false}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Chat } from 'components/Chat';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagelist\":\"MessageList_messagelist__2O4Ns\",\"blank\":\"MessageList_blank__J3Utj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ChatItem_item__1Ldvj\",\"content\":\"ChatItem_content__2Egfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3qUkX\",\"active\":\"Sidebar_active__9wFJE\"};"],"sourceRoot":""}